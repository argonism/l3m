version: "3.9"

networks:
  llmnet:
    external: true
  llmnet_internal:

volumes:
  ollama_data:

services:
  ollama:
    image: ollama/ollama:latest
    container_name: ollama
    restart: unless-stopped
    # deploy:
    #   resources:
    #     reservations:
    #       devices:
    #         - driver: nvidia
    #           count: all
    #           capabilities: [gpu]
    # environment:
      # OLLAMA_KEEP_ALIVE: ${OLLAMA_KEEP_ALIVE}
      # NVIDIA_VISIBLE_DEVICES: all   # GPU の場合
      # NVIDIA_DRIVER_CAPABILITIES: compute,utility
    volumes:
      - ollama_data:/root/.ollama
    ports:
      - "11434:11434"
    networks: [ llmnet_internal ]
    healthcheck:
      test: ["CMD", "ollama", "list"]
      interval: 10s
      timeout: 5s
      retries: 20

  ollama-init:
    image: ollama/ollama:latest
    depends_on:
      ollama:
        condition: service_healthy
    environment:
      OLLAMA_HOST: http://ollama:11434
    volumes:
      - ./ollama:/ollama
    networks: [ llmnet_internal ]
    entrypoint: ["/bin/sh","-lc"]
    command: "/ollama/models/init_models.sh"
    restart: "no"

  litellm:
    image: ghcr.io/berriai/litellm:main-latest
    container_name: litellm
    depends_on:
      - ollama
    environment:
      OPENAI_API_KEY: ${OPENAI_API_KEY}
      ANTHROPIC_API_KEY: ${ANTHROPIC_API_KEY}
    volumes:
      - ./litellm_config.yaml:/app/config.yaml:ro
    command: ["--config", "/app/config.yaml", "--port", "4000"]
    ports:
      - "${LITELLM_PORT}:4000"
    networks: [ llmnet, llmnet_internal ]
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "curl", "-fsS", "http://localhost:4000/health"]
      interval: 10s
      timeout: 5s
      retries: 20

  prometheus:
    image: prom/prometheus:latest
    restart: unless-stopped
    networks: [ llmnet_internal ]
    ports: ["9090:9090"]
    volumes:
      - ./prometheus.yml:/etc/prometheus/prometheus.yml:ro

  grafana:
    image: grafana/grafana:latest
    restart: unless-stopped
    networks: [ llmnet_internal ]
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=${GRAFANA_ADMIN_PASSWORD}
    volumes:
      - ./grafana/provisioning/datasources:/etc/grafana/provisioning/datasources
      - ./grafana/provisioning/dashboards:/etc/grafana/provisioning/dashboards
    depends_on: [ prometheus ]
    ports: ["3030:3000"]
